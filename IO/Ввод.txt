1. Расскажите общее идею что такое поток ввода-вывода?
Идея в том что помимо тех объектов которые мы создаем в процессе написания программы
можно вводить какие-то данные в процессе ее работы. Это могут быть любые объекты которые потдерживает
java. Можно организовать как ввод строки так и принять объект какого-то класса в том числе и 
созданного самостоятельно.
====================
2. Что такое Java IO?
IO это пакет который обеспечивает процесс обмена данными с внешней средой выходящей за рамки программы.
Представляет из себя две группы интерфейсов ввода-вывода: символьный и байтовый. Является блокирующем,
тоесть когда поток(stream) ждет данных поток (thred) только этим и занят(заблокирован).

2.1 Символьный представлен двумя интерфейсами Reader и Writer
2.1.1 Reader это интерфейс который реализуют следующие классы: BufferedReader, FilterReader, PipedReader и 
InputStreamReader который имеет наследника FileReader для чтения текста из файла.

2.1.2 Writer это интерфейс реализуемый классами: BufferedWriter, FilterWriter, PipedWriter, PrintWriter и
OutputStreamWriter который имеет наследника FileWriter для записи текста в файл.


2.2 Байтовый представлен двуми интерфейсами InputStream и OutputStream.
2.2.1 InputStream реализуется классами: ObjectInputStream, FileInputStream, PipedInputStream, и 
FilterInputStream который имеет наследников: DataInputStream, BufferedInputStream, PushBackInputStream.

2.2.2 OutputStream реализован через ObjectOutputStream, FileOutputStream, PipedOutputStream и 
FilterOutputStream имеющий наследников: DataOutputStream, BufferedOutputStream.

3.0 Еще есть класс RandomAcsessFile который наследуется на прямую от Object и служит для чтения и записи. Вторым
параметром его конструктор принимает флаг "r" - чтение, или "rw" - запись.
====================
3. Что такое Java NIO?
NIO это дополнение к IO но он:
1. Буферо-ориентированный в отличие от IO который потоко-ориентированый.
2. Имеет не блокирующий асинхронный ввод-вывод, в отличие от IO. Тоесть stream данных пока нет то thred
можед заняться чем-то еще пока данные для stream не появятся.
3. Имеет селекторы которые позволяют мониторить сразу несколько потоков ввода одним принимаемым потоком.
4.0 NIO как и OI очень большой... Основные интерфейс Path - обладает методами не хватающими классу File. File 
может быть приведен к Path и обратно.
4.1 Различные варианты буферезации данных  реализованные через
подклассы класса Buffer, названных по типу данных которые они буферезируют.
4.2 Имеет класс Files для удобного копирования перемещения и всяких действий с файлами по сути расширяет API File и Path
4.3 Имеет интерфейс BasicFileAttributes позволяеющий получить атрибуты файла типа время создания, время последнего обращения и тд.

====================
4. Что такое Scanner? 
5. Как работает Scanner внутри?
6. Какие базовые методы существуют в Scanner?
Это класс для считывания данных из потока и строк.
Может принимать в свой конструктор File, Path, System.in, ByteChanel из nio
Основные методы: 
hashNext() - проверяет есть ли еще символы для чтения.
nextLine() - считывает строку
nextInt() - считывает число типа int

============================

7. Что такое байтовый поток? Как он реализован внутри?
Мы разваливаем объект на баты по определенному правилу передаем по одному или массивами и потом собираем потому же правилу,
это называется сериализация.
Реализован через ByteInput/OutputStream и ByteArrayInput/OutputStream. Могут быть буферизированы тоесть можно 
посылать пакетами определенного размера.
================================================
8. Что такое символьный поток? Как он реализован внутри?
Это потоки реализованы интерфейсами Reader и Writer. Типа InputStreamReader и его наследника FileReader.
Может быть буфферезирован при помощи BufferedReader.
===============================
9. Что такое буферизированный поток?
Это способ ускорить процесс чтения за счет обращения к диску не за одним байтом за одно обращение а за несколько.

===============================
10. Что такое форматированный вывод? Какие механизмы позволяют осуществить форматированный вызов?
У класса Console есть метод printf() но этот класс не работает в консоли среды разработки.
============================================
11. Как осуществлятся ввод и вывод из командной строки?
System.in; System.out;
===========================================
12. Что такое класс Console? Расскажите его АПИ.
Это класс для работы с консолью он получает и выводит данные через System.in System.out
Console console = System.console();
Основные методы:
readLine() для чтения строки
readPassword() возвращает char[] и не печатает на консоль этот ввод
printf() выводит на консоль с использованием форматирования.
=====================================
13. Что такое поток данных? Data stream.
Это поток для передачи строк и примитивов
=======================================
14. Что такое поток объектов, Object stream.
Это возможность передать объект java по stream главное что-бы класс реализовывал Serializable 
==============================================
15. Что такое Path? Как он реализуется на разных ОС?
16. Как получить список файлов?
методом list();
===========================
17. Как проверить что файловая сущность является файлом или папкой?
!obj.isDirectory()
isFile();
====================
18. Как удалить файл?
Вызвать метод delete();
==================
19. Как переместить файл?
Files.copy а потом удалить старый
===============================
20. Как управлять аттрибьтами файла?


===============================
21. Как создать файл? 
У класса Files.copy(File src, File dst);
File file = new File();
file.createNewFile(); boolean

или Files.createFile(Path, Atribetes???)
========================
22. Как создать директорию?
использовать File.mkDir() 
или
Files.createDirectory
======================
23. Как записать в файл?
1-ый способ: использовать RandomAcsessFile(File file,"rw")или RandomAccsessFile(String path,"rw")
2-ой : FileWriter w = new FileWriter(String path)
3-й : FileOutputStream o = new FileOutputStream(); o.write(byte i) || o.write(byte[] arr);

=====================
24. Как прочитать данные из файла?